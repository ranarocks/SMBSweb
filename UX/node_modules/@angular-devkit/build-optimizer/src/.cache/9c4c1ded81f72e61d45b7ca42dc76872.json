{"remainingRequest":"D:\\Imp\\Learn\\SMBSweb\\UX\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Imp\\Learn\\SMBSweb\\UX\\node_modules\\ag-grid\\dist\\lib\\columnController\\columnKeyCreator.js","dependencies":[{"path":"D:\\Imp\\Learn\\SMBSweb\\UX\\node_modules\\ag-grid\\dist\\lib\\columnController\\columnKeyCreator.js","mtime":1525243698761},{"path":"D:\\Imp\\Learn\\SMBSweb\\UX\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1530947965468},{"path":"D:\\Imp\\Learn\\SMBSweb\\UX\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["/**\r\n * ag-grid - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\r\n * @version v17.1.1\r\n * @link http://www.ag-grid.com/\r\n * @license MIT\r\n */\r\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// class returns a unique id to use for the column. it checks the existing columns, and if the requested\r\n// id is already taken, it will start appending numbers until it gets a unique id.\r\n// eg, if the col field is 'name', it will try ids: {name, name_1, name_2...}\r\n// if no field or id provided in the col, it will try the ids of natural numbers\r\nvar utils_1 = require(\"../utils\");\r\nvar ColumnKeyCreator = /*@__PURE__*/ (function () {\r\n    function ColumnKeyCreator() {\r\n        this.existingKeys = [];\r\n    }\r\n    ColumnKeyCreator.prototype.getUniqueKey = function (colId, colField) {\r\n        // in case user passed in number for colId, convert to string\r\n        colId = utils_1.Utils.toStringOrNull(colId);\r\n        var count = 0;\r\n        while (true) {\r\n            var idToTry = void 0;\r\n            if (colId) {\r\n                idToTry = colId;\r\n                if (count !== 0) {\r\n                    idToTry += '_' + count;\r\n                }\r\n            }\r\n            else if (colField) {\r\n                idToTry = colField;\r\n                if (count !== 0) {\r\n                    idToTry += '_' + count;\r\n                }\r\n            }\r\n            else {\r\n                idToTry = '' + count;\r\n            }\r\n            if (this.existingKeys.indexOf(idToTry) < 0) {\r\n                this.existingKeys.push(idToTry);\r\n                return idToTry;\r\n            }\r\n            count++;\r\n        }\r\n    };\r\n    return ColumnKeyCreator;\r\n}());\r\nexports.ColumnKeyCreator = ColumnKeyCreator;\r\n",null]}