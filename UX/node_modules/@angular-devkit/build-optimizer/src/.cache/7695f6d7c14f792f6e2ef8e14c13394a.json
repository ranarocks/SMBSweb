{"remainingRequest":"D:\\Imp\\Learn\\SMBSweb\\UX\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Imp\\Learn\\SMBSweb\\UX\\node_modules\\ag-grid\\dist\\lib\\context\\beanStub.js","dependencies":[{"path":"D:\\Imp\\Learn\\SMBSweb\\UX\\node_modules\\ag-grid\\dist\\lib\\context\\beanStub.js","mtime":1525243698429},{"path":"D:\\Imp\\Learn\\SMBSweb\\UX\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1530947965468},{"path":"D:\\Imp\\Learn\\SMBSweb\\UX\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["/**\r\n * ag-grid - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\r\n * @version v17.1.1\r\n * @link http://www.ag-grid.com/\r\n * @license MIT\r\n */\r\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar eventService_1 = require(\"../eventService\");\r\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\r\nvar utils_1 = require(\"../utils\");\r\nvar BeanStub = /*@__PURE__*/ (function () {\r\n    function BeanStub() {\r\n        this.destroyFunctions = [];\r\n        this.destroyed = false;\r\n    }\r\n    BeanStub.prototype.destroy = function () {\r\n        this.destroyFunctions.forEach(function (func) { return func(); });\r\n        this.destroyFunctions.length = 0;\r\n        this.destroyed = true;\r\n        this.dispatchEvent({ type: BeanStub.EVENT_DESTROYED });\r\n    };\r\n    BeanStub.prototype.addEventListener = function (eventType, listener) {\r\n        if (!this.localEventService) {\r\n            this.localEventService = new eventService_1.EventService();\r\n        }\r\n        this.localEventService.addEventListener(eventType, listener);\r\n    };\r\n    BeanStub.prototype.removeEventListener = function (eventType, listener) {\r\n        if (this.localEventService) {\r\n            this.localEventService.removeEventListener(eventType, listener);\r\n        }\r\n    };\r\n    BeanStub.prototype.dispatchEventAsync = function (event) {\r\n        var _this = this;\r\n        setTimeout(function () { return _this.dispatchEvent(event); }, 0);\r\n    };\r\n    BeanStub.prototype.dispatchEvent = function (event) {\r\n        if (this.localEventService) {\r\n            this.localEventService.dispatchEvent(event);\r\n        }\r\n    };\r\n    BeanStub.prototype.addDestroyableEventListener = function (eElement, event, listener) {\r\n        if (this.destroyed) {\r\n            return;\r\n        }\r\n        if (eElement instanceof HTMLElement) {\r\n            utils_1._.addSafePassiveEventListener(eElement, event, listener);\r\n        }\r\n        else if (eElement instanceof gridOptionsWrapper_1.GridOptionsWrapper) {\r\n            eElement.addEventListener(event, listener);\r\n        }\r\n        else {\r\n            eElement.addEventListener(event, listener);\r\n        }\r\n        this.destroyFunctions.push(function () {\r\n            if (eElement instanceof HTMLElement) {\r\n                eElement.removeEventListener(event, listener);\r\n            }\r\n            else if (eElement instanceof gridOptionsWrapper_1.GridOptionsWrapper) {\r\n                eElement.removeEventListener(event, listener);\r\n            }\r\n            else {\r\n                eElement.removeEventListener(event, listener);\r\n            }\r\n        });\r\n    };\r\n    BeanStub.prototype.isAlive = function () {\r\n        return !this.destroyed;\r\n    };\r\n    BeanStub.prototype.addDestroyFunc = function (func) {\r\n        // if we are already destroyed, we execute the func now\r\n        if (this.isAlive()) {\r\n            this.destroyFunctions.push(func);\r\n        }\r\n        else {\r\n            func();\r\n        }\r\n    };\r\n    BeanStub.EVENT_DESTROYED = 'destroyed';\r\n    return BeanStub;\r\n}());\r\nexports.BeanStub = BeanStub;\r\n",null]}