{"remainingRequest":"D:\\Imp\\Learn\\SMBSweb\\UX\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Imp\\Learn\\SMBSweb\\UX\\node_modules\\ag-grid\\dist\\lib\\components\\componentUtil.js","dependencies":[{"path":"D:\\Imp\\Learn\\SMBSweb\\UX\\node_modules\\ag-grid\\dist\\lib\\components\\componentUtil.js","mtime":1525243699520},{"path":"D:\\Imp\\Learn\\SMBSweb\\UX\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1530947965468},{"path":"D:\\Imp\\Learn\\SMBSweb\\UX\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["/**\r\n * ag-grid - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\r\n * @version v17.1.1\r\n * @link http://www.ag-grid.com/\r\n * @license MIT\r\n */\r\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar events_1 = require(\"../events\");\r\nvar propertyKeys_1 = require(\"../propertyKeys\");\r\nvar utils_1 = require(\"../utils\");\r\nvar ComponentUtil = /*@__PURE__*/ (function () {\r\n    function ComponentUtil() {\r\n    }\r\n    ComponentUtil.getEventCallbacks = function () {\r\n        if (!ComponentUtil.EVENT_CALLBACKS) {\r\n            ComponentUtil.EVENT_CALLBACKS = [];\r\n            ComponentUtil.EVENTS.forEach(function (eventName) {\r\n                ComponentUtil.EVENT_CALLBACKS.push(ComponentUtil.getCallbackForEvent(eventName));\r\n            });\r\n        }\r\n        return ComponentUtil.EVENT_CALLBACKS;\r\n    };\r\n    ComponentUtil.copyAttributesToGridOptions = function (gridOptions, component) {\r\n        checkForDeprecated(component);\r\n        // create empty grid options if none were passed\r\n        if (typeof gridOptions !== 'object') {\r\n            gridOptions = {};\r\n        }\r\n        // to allow array style lookup in TypeScript, take type away from 'this' and 'gridOptions'\r\n        var pGridOptions = gridOptions;\r\n        // add in all the simple properties\r\n        ComponentUtil.ARRAY_PROPERTIES\r\n            .concat(ComponentUtil.STRING_PROPERTIES)\r\n            .concat(ComponentUtil.OBJECT_PROPERTIES)\r\n            .concat(ComponentUtil.FUNCTION_PROPERTIES)\r\n            .forEach(function (key) {\r\n            if (typeof component[key] !== 'undefined') {\r\n                pGridOptions[key] = component[key];\r\n            }\r\n        });\r\n        ComponentUtil.BOOLEAN_PROPERTIES.forEach(function (key) {\r\n            if (typeof component[key] !== 'undefined') {\r\n                pGridOptions[key] = ComponentUtil.toBoolean(component[key]);\r\n            }\r\n        });\r\n        ComponentUtil.NUMBER_PROPERTIES.forEach(function (key) {\r\n            if (typeof component[key] !== 'undefined') {\r\n                pGridOptions[key] = ComponentUtil.toNumber(component[key]);\r\n            }\r\n        });\r\n        ComponentUtil.getEventCallbacks().forEach(function (funcName) {\r\n            if (typeof component[funcName] !== 'undefined') {\r\n                pGridOptions[funcName] = component[funcName];\r\n            }\r\n        });\r\n        return gridOptions;\r\n    };\r\n    ComponentUtil.getCallbackForEvent = function (eventName) {\r\n        if (!eventName || eventName.length < 2) {\r\n            return eventName;\r\n        }\r\n        else {\r\n            return 'on' + eventName[0].toUpperCase() + eventName.substr(1);\r\n        }\r\n    };\r\n    ComponentUtil.processOnChange = function (changes, gridOptions, api, columnApi) {\r\n        if (!changes) {\r\n            return;\r\n        }\r\n        checkForDeprecated(changes);\r\n        // to allow array style lookup in TypeScript, take type away from 'this' and 'gridOptions'\r\n        var pGridOptions = gridOptions;\r\n        // check if any change for the simple types, and if so, then just copy in the new value\r\n        ComponentUtil.ARRAY_PROPERTIES\r\n            .concat(ComponentUtil.OBJECT_PROPERTIES)\r\n            .concat(ComponentUtil.STRING_PROPERTIES)\r\n            .forEach(function (key) {\r\n            if (changes[key]) {\r\n                pGridOptions[key] = changes[key].currentValue;\r\n            }\r\n        });\r\n        ComponentUtil.BOOLEAN_PROPERTIES.forEach(function (key) {\r\n            if (changes[key]) {\r\n                pGridOptions[key] = ComponentUtil.toBoolean(changes[key].currentValue);\r\n            }\r\n        });\r\n        ComponentUtil.NUMBER_PROPERTIES.forEach(function (key) {\r\n            if (changes[key]) {\r\n                pGridOptions[key] = ComponentUtil.toNumber(changes[key].currentValue);\r\n            }\r\n        });\r\n        ComponentUtil.getEventCallbacks().forEach(function (funcName) {\r\n            if (changes[funcName]) {\r\n                pGridOptions[funcName] = changes[funcName].currentValue;\r\n            }\r\n        });\r\n        if (changes.showToolPanel) {\r\n            api.showToolPanel(ComponentUtil.toBoolean(changes.showToolPanel.currentValue));\r\n        }\r\n        if (changes.quickFilterText) {\r\n            api.setQuickFilter(changes.quickFilterText.currentValue);\r\n        }\r\n        if (changes.rowData) {\r\n            api.setRowData(changes.rowData.currentValue);\r\n        }\r\n        if (changes.pinnedTopRowData) {\r\n            api.setPinnedTopRowData(changes.pinnedTopRowData.currentValue);\r\n        }\r\n        if (changes.pinnedBottomRowData) {\r\n            api.setPinnedBottomRowData(changes.pinnedBottomRowData.currentValue);\r\n        }\r\n        if (changes.columnDefs) {\r\n            api.setColumnDefs(changes.columnDefs.currentValue, \"gridOptionsChanged\");\r\n        }\r\n        if (changes.datasource) {\r\n            api.setDatasource(changes.datasource.currentValue);\r\n        }\r\n        if (changes.headerHeight) {\r\n            api.setHeaderHeight(ComponentUtil.toNumber(changes.headerHeight.currentValue));\r\n        }\r\n        if (changes.paginationPageSize) {\r\n            api.paginationSetPageSize(ComponentUtil.toNumber(changes.paginationPageSize.currentValue));\r\n        }\r\n        if (changes.pivotMode) {\r\n            columnApi.setPivotMode(ComponentUtil.toBoolean(changes.pivotMode.currentValue));\r\n        }\r\n        if (changes.groupRemoveSingleChildren) {\r\n            api.setGroupRemoveSingleChildren(ComponentUtil.toBoolean(changes.groupRemoveSingleChildren.currentValue));\r\n        }\r\n        if (changes.suppressRowDrag) {\r\n            api.setSuppressRowDrag(ComponentUtil.toBoolean(changes.suppressRowDrag.currentValue));\r\n        }\r\n        // copy changes into an event for dispatch\r\n        var event = {\r\n            type: events_1.Events.EVENT_COMPONENT_STATE_CHANGED,\r\n            api: gridOptions.api,\r\n            columnApi: gridOptions.columnApi\r\n        };\r\n        utils_1.Utils.iterateObject(changes, function (key, value) {\r\n            event[key] = value;\r\n        });\r\n        api.dispatchEvent(event);\r\n    };\r\n    ComponentUtil.toBoolean = function (value) {\r\n        if (typeof value === 'boolean') {\r\n            return value;\r\n        }\r\n        else if (typeof value === 'string') {\r\n            // for boolean, compare to empty String to allow attributes appearing with\r\n            // not value to be treated as 'true'\r\n            return value.toUpperCase() === 'TRUE' || value == '';\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    ComponentUtil.toNumber = function (value) {\r\n        if (typeof value === 'number') {\r\n            return value;\r\n        }\r\n        else if (typeof value === 'string') {\r\n            return Number(value);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    };\r\n    // all the events are populated in here AFTER this class (at the bottom of the file).\r\n    ComponentUtil.EVENTS = [];\r\n    ComponentUtil.STRING_PROPERTIES = propertyKeys_1.PropertyKeys.STRING_PROPERTIES;\r\n    ComponentUtil.OBJECT_PROPERTIES = propertyKeys_1.PropertyKeys.OBJECT_PROPERTIES;\r\n    ComponentUtil.ARRAY_PROPERTIES = propertyKeys_1.PropertyKeys.ARRAY_PROPERTIES;\r\n    ComponentUtil.NUMBER_PROPERTIES = propertyKeys_1.PropertyKeys.NUMBER_PROPERTIES;\r\n    ComponentUtil.BOOLEAN_PROPERTIES = propertyKeys_1.PropertyKeys.BOOLEAN_PROPERTIES;\r\n    ComponentUtil.FUNCTION_PROPERTIES = propertyKeys_1.PropertyKeys.FUNCTION_PROPERTIES;\r\n    ComponentUtil.ALL_PROPERTIES = propertyKeys_1.PropertyKeys.ALL_PROPERTIES;\r\n    return ComponentUtil;\r\n}());\r\nexports.ComponentUtil = ComponentUtil;\r\nutils_1.Utils.iterateObject(events_1.Events, function (key, value) {\r\n    ComponentUtil.EVENTS.push(value);\r\n});\r\nfunction checkForDeprecated(changes) {\r\n    if (changes.rowDeselected || changes.onRowDeselected) {\r\n        console.warn('ag-grid: as of v3.4 rowDeselected no longer exists. Please check the docs.');\r\n    }\r\n}\r\n",null]}